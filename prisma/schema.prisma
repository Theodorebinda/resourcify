// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String     @default("Default Name")
  email     String     @unique
  image     String?
  password  String
  isActive  Boolean    @default(true)
  isAdmin   Boolean    @default(false)
  resources Resource[]
  role      String     @default("user")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  favorites Resource[] @relation("UserFavorites")
  comments  Comment[]
  reviews   Review[]
}

model Resource {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  isFree      Boolean
  price       Float?
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  User     User[]    @relation("UserFavorites")
  comments Comment[]
  reviews  Review[]
}

model Comment {
  id         Int      @id @default(autoincrement())
  content    String
  userId     Int
  resourceId Int
  user       User     @relation(fields: [userId], references: [id])
  resource   Resource @relation(fields: [resourceId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Review {
  id         Int      @id @default(autoincrement())
  rating     Int
  content    String?
  userId     Int
  resourceId Int
  user       User     @relation(fields: [userId], references: [id])
  resource   Resource @relation(fields: [resourceId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
